alias physical S0;
physical=([PTBR+2*(SP/512)]*512)+(SP%512);

alias syscallnumber S1;
syscallnumber=[physical-1];

alias sysindex S5;
alias current S4;
alias tempage S6;
alias counter1 S11;
alias counter S12;
alias rpindex S13;
current=(PTBR-1024)/8;
alias newly  S9;
if(syscallnumber==10 || syscallnumber==14) then


counter=0;
while(counter<32) do
if([READY_LIST+counter*32+1]==(100+current)) then
[READY_LIST+counter*32+1]=1;
endif;
counter=counter+1;
endwhile;


if(syscallnumber==14) then
[physical-2]=0;
ireturn ;
endif;

endif;

if(syscallnumber==10 || syscallnumber==13) then

rpindex=current+1;

while ((rpindex%32)!=current) do
if([READY_LIST+(rpindex%32)*32+1]==1) then
break;
endif;
rpindex=rpindex+1;
endwhile;

rpindex=rpindex%32;

endif;

if(syscallnumber==10) then

if(rpindex==current) then
halt;
endif;


counter=15;
while (counter<=30) do
if([READY_LIST+current*32+counter]!=-1) then
sysindex=[READY_LIST+current*32+counter];
[FILE_TABLE+sysindex*2+1]=[FILE_TABLE+sysindex*2+1]-1;
if([FILE_TABLE+sysindex*2+1]<=0) then
// [FILE_TABLE+sysindex*2+1]=0;
[FILE_TABLE+sysindex*2+0]=-1;
endif;
[READY_LIST+current*32+counter]=-1;
[READY_LIST+current*32+counter+1]=-1;
endif;
counter=counter+2;
endwhile;
[READY_LIST+current*32+1]=0;

counter=0;
while(counter<4) do
if([PTBR+2*counter]!=-1 && ([PTBR+2*counter+1]=="01" || [PTBR+counter*2+1]=="11")) then
tempage=[PTBR+2*counter];
[MEM_LIST+tempage]=[MEM_LIST+tempage]-1;
endif;
if([PTBR+2*counter]>=448 && ([PTBR+2*counter+1]=="10" || [PTBR+counter*2+1]=="00")) then
tempage=[PTBR+2*counter];
[DISK_LIST+tempage]=[DISK_LIST+tempage]-1;
store(6,20);
endif;
[PTBR+2*counter]=-1;
[PTBR+2*counter+1]="00";
counter=counter+1;
endwhile;

endif;


if(syscallnumber==13) then

alias waitingpid S14;
waitingpid=[physical-3];

if((waitingpid==current) ||  ([READY_LIST+waitingpid*32+1]==0) || (waitingpid <0) || (waitingpid >=32) ) then
[physical-2]=-1;
ireturn;
endif;


newly=READY_LIST+current*32;

[newly+1]=100+waitingpid;

[newly+2]=BP;
[newly+3]=SP-1;
[newly+4]=[physical];
[newly+5]=PTBR;
[newly+6]=PTLR;
[newly+7]=R0;
[newly+8]=R1;
[newly+9]=R2;
[newly+10]=R3;
[newly+11]=R4;
[newly+12]=R5;
[newly+13]=R6;
[newly+14]=R7;

endif;


if(syscallnumber==10 || syscallnumber==13) then


newly=READY_LIST+rpindex*32;

BP=[newly+2];
SP=[newly+3];
PTBR=[newly+5];
PTLR=[newly+6];
R0=[newly+7];
R1=[newly+8];
R2=[newly+9];
R3=[newly+10];
R4=[newly+11];
R5=[newly+12];
R6=[newly+13];
R7=[newly+14];

[physical-2]=0; 

SP=SP+1;
alias newphysical S7;
newphysical=([PTBR+2*(SP/512)]*512)+(SP%512);
[newphysical]=[READY_LIST+rpindex*32+4];
[READY_LIST+rpindex*32+1]=2;

ireturn;
endif;




